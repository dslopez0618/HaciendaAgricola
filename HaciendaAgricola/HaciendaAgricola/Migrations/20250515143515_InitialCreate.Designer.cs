// <auto-generated />
using System;
using HaciendaAgricola.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HaciendaAgricola.Migrations
{
    [DbContext(typeof(HaciendaContext))]
    [Migration("20250515143515_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HaciendaAgricola.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Preferencias")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Cultivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaSiembra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ParcelaId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Variedad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParcelaId");

                    b.ToTable("Cultivos");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Costo")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("FechaCaducidad")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Stock")
                        .HasColumnType("double precision");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.InsumoLabor", b =>
                {
                    b.Property<int>("LaborAgricolaId")
                        .HasColumnType("integer");

                    b.Property<int>("InsumoId")
                        .HasColumnType("integer");

                    b.Property<double>("CantidadUsada")
                        .HasColumnType("double precision");

                    b.HasKey("LaborAgricolaId", "InsumoId");

                    b.HasIndex("InsumoId");

                    b.ToTable("InsumosLabores");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.LaborAgricola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CultivoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CultivoId");

                    b.ToTable("LaboresAgricolas");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Parcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AreaHectareas")
                        .HasColumnType("double precision");

                    b.Property<string>("HistorialUso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoSuelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcelas");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Personal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Habilidades")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.PersonalLabor", b =>
                {
                    b.Property<int>("LaborAgricolaId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("LaborAgricolaId", "PersonalId");

                    b.HasIndex("PersonalId");

                    b.ToTable("PersonalLabores");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.ProductoPedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductoTerminadoId")
                        .HasColumnType("integer");

                    b.Property<double>("Cantidad")
                        .HasColumnType("double precision");

                    b.HasKey("PedidoId", "ProductoTerminadoId");

                    b.HasIndex("ProductoTerminadoId");

                    b.ToTable("ProductosPedidos");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.ProductoTerminado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Calidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Stock")
                        .HasColumnType("double precision");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Variedad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductosTerminados");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Cultivo", b =>
                {
                    b.HasOne("HaciendaAgricola.Models.Parcela", "Parcela")
                        .WithMany("Cultivos")
                        .HasForeignKey("ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.InsumoLabor", b =>
                {
                    b.HasOne("HaciendaAgricola.Models.Insumo", "Insumo")
                        .WithMany("LaboresUsadas")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HaciendaAgricola.Models.LaborAgricola", "LaborAgricola")
                        .WithMany("InsumosUsados")
                        .HasForeignKey("LaborAgricolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("LaborAgricola");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.LaborAgricola", b =>
                {
                    b.HasOne("HaciendaAgricola.Models.Cultivo", "Cultivo")
                        .WithMany("Labores")
                        .HasForeignKey("CultivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cultivo");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Pedido", b =>
                {
                    b.HasOne("HaciendaAgricola.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.PersonalLabor", b =>
                {
                    b.HasOne("HaciendaAgricola.Models.LaborAgricola", "LaborAgricola")
                        .WithMany("PersonalAsignado")
                        .HasForeignKey("LaborAgricolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HaciendaAgricola.Models.Personal", "Personal")
                        .WithMany("LaboresAsignadas")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaborAgricola");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.ProductoPedido", b =>
                {
                    b.HasOne("HaciendaAgricola.Models.Pedido", "Pedido")
                        .WithMany("Productos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HaciendaAgricola.Models.ProductoTerminado", "ProductoTerminado")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProductoTerminadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("ProductoTerminado");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Cultivo", b =>
                {
                    b.Navigation("Labores");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Insumo", b =>
                {
                    b.Navigation("LaboresUsadas");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.LaborAgricola", b =>
                {
                    b.Navigation("InsumosUsados");

                    b.Navigation("PersonalAsignado");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Parcela", b =>
                {
                    b.Navigation("Cultivos");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Pedido", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.Personal", b =>
                {
                    b.Navigation("LaboresAsignadas");
                });

            modelBuilder.Entity("HaciendaAgricola.Models.ProductoTerminado", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
